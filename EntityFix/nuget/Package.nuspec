<?xml version="1.0"?>
<package >
  <metadata>
    <id>EntityFix</id>
    <version>1.0.0</version>
    <authors>Evgeny Zelenov</authors>
    <owners>Evgeny Zelenov</owners>
    <iconUrl>http://www.gooseinmyshorts.com/images/enityfix/EntityFix.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <title>Entity Fix</title>
    <summary>Fixes EF EntityCommandExecutionException</summary>
    <description>
When you call stored procedure with select and output parameters and you don't select on some conditions (for example, you're just returning an error code) â€” you get a mapping EntityCommandExecutionException. This package fixes this annoying behavior of EF by returning empty data set and letting you read output parameters.

Example:
Consider you have this sql procedure:

CREATE PROCEDURE [dbo].[Foo]
    @Condition int = NULL,
    @ResultCode Int = NULL OUTPUT
AS
BEGIN
    IF @Condition IS NULL BEGIN
        SET @ResultCode = 1;       -- return 1 if condition = null
        RETURN;
    END
    SELECT 1 as 'One', 2 as 'Two'; -- select otherwise
    SET @ResultCode = 0;
END

Calling this procedure in EF:

var resultCodeParameter = new ObjectParameter("ResultCode", typeof(int));
var result = db.Foo(null, resultCodeParameter).FirstOrDefault();
var resultCode = resultCodeParameter.Value;

will throw an exception:
System.Data.Entity.Core.EntityCommandExecutionException: The data reader is incompatible with the specified 'xxx.Foo_Result'. A member of the type, 'One', does not have a corresponding column in the data reader with the same name.

Calling EntityFix.Load() once on your application start will fix this bug.
    </description>
    <releaseNotes>First release</releaseNotes>
    <copyright>Copyright 2016</copyright>
    <tags>EF entity entityframework fix select output stored</tags>
    <dependencies>
      <dependency id="EntityFramework" version="1.0" />
    </dependencies>
  </metadata>
</package>